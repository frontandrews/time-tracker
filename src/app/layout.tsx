"use client";
import "./globals.css";
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import { Providers } from "./providers";
import {
  Navbar,
  NavbarBrand,
  NavbarContent,
  NavbarItem,
} from "@nextui-org/navbar";
import { Button } from "@nextui-org/button";
import { Link } from "@nextui-org/link";
import {
  Dropdown,
  DropdownTrigger,
  DropdownMenu,
  DropdownItem,
} from "@nextui-org/dropdown";
import { User } from "@nextui-org/user";
import { useRouter, usePathname } from "next/navigation";
import NextScript from 'next/script';
import {Avatar, AvatarGroup, AvatarIcon} from "@nextui-org/avatar";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const isAuthenticated = true;

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const router = useRouter();
  const currentRoute = usePathname();

  const links = [
    {
      link: "/dashboard",
      name: "Dashboard",
    },
    {
      link: "/notes",
      name: "Notes",
    },
  ];

  return (
    <html lang="en" className="light">
      <head>
        <link rel='icon' href='/favicon.ico'/>
      </head>
      {/* Google Analytics tracking code here */}
      {process.env.NODE_ENV === 'production' && (
        <>
          {/* <NextScript
            src='https://www.googletagmanager.com/gtag/js?id=G-ABCDEFGHIJK'
            strategy='afterInteractive'
          />
          <NextScript id='google-analytics' strategy='afterInteractive'>
            {`
            window.dataLayer = window.dataLayer || [];
            function gtag(){window.dataLayer.push(arguments);}
            gtag('js', new Date());
            gtag('config', '');
            `}
          </NextScript> */}
        </>
      )}
      {/* end Google Analytics tracking code */}
      <body>
        <Providers>
          <Navbar>
            <NavbarBrand>
              <Link href={isAuthenticated ? "/dashboard" : "/"}>
                <h3 className="font-bold">ChronoMate</h3>
              </Link>
            </NavbarBrand>
            {isAuthenticated && (
              <div>
                <NavbarContent
                  className="hidden sm:flex gap-4"
                  justify="center"
                >
                  {links.map((link) => (
                    <NavbarItem isActive={currentRoute === link.link} key={link.link}>
                      <Link 
                        color={currentRoute === link.link ? "primary" : "foreground"} 
                        href={link.link}>
                        {link.name}
                      </Link>
                    </NavbarItem>
                  ))}
                </NavbarContent>
              </div>
            )}
            <NavbarContent justify="end">
              {!isAuthenticated ? (
                <>
                  <NavbarItem className="hidden lg:flex">
                    <Link href="/login">Login</Link>
                  </NavbarItem>
                  <NavbarItem>
                    <Button
                      as={Link}
                      color="primary"
                      href="/sign-up"
                      variant="flat"
                    >
                      Sign Up
                    </Button>
                  </NavbarItem>
                </>
              ) : (
                <Dropdown placement="bottom-start">
                  <DropdownTrigger>
                    <div className="flex flex-row">
                      <Avatar className="sm:hidden" src="https://i.pravatar.cc/150" />
                      <User
                        as="button"
                        avatarProps={{
                          isBordered: true,
                          src: "https://i.pravatar.cc/150",
                        }}
                        className="hidden sm:flex transition-transform"
                        description="@andrewsribeiro"
                        name="Andrews Ribeiro"
                      />
                    </div>
                  </DropdownTrigger>
                  <DropdownMenu aria-label="User Actions" variant="flat">
                    <DropdownItem key="profile" className="h-14 gap-2">
                      <p className="font-bold">Signed in as</p>
                      <p className="font-bold">@andrewsribeiro</p>
                    </DropdownItem>
                    <DropdownItem
                      key="configurations"
                      onClick={() => router.push("/settings")}
                    >
                      Configurations
                    </DropdownItem>
                    <DropdownItem
                      key="help_and_feedback"
                      onClick={() => router.push("/faq")}
                    >
                      Help & Feedback
                    </DropdownItem>
                    <DropdownItem
                      key="logout"
                      color="danger"
                      onClick={() => router.push("/")}
                    >
                      Logout
                    </DropdownItem>
                  </DropdownMenu>
                </Dropdown>
              )}
            </NavbarContent>
          </Navbar>
          {children}
        </Providers>
      </body>
    </html>
  );
}
